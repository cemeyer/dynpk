#!/bin/env python
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
import os, sys, subprocess, re, shutil, stat

if len(sys.argv) < 3:
    print "Usage: %s output-dir exec1 [exec2 ...]" % (os.path.basename(sys.argv[0]))
    sys.exit(1)

def get_libs(fname):
    p = subprocess.Popen("ldd %s | grep '=>'" % fname,
                         shell = True,
                         stdout = subprocess.PIPE)
    so, se = p.communicate()
    assert p.wait() == 0

    return re.findall( "/[^ ]+", so )

def write_wrapper(fname, wrapper_name):
    f = open( wrapper_name , "w" )
    f.write( """#!/bin/bash

SCRIPT_DIR="${BASH_SOURCE[0]}";
if([ -h "${SCRIPT_DIR}" ]) then
  while([ -h "${SCRIPT_DIR}" ]) do SCRIPT_DIR=`readlink "${SCRIPT_DIR}"`; done
fi
pushd . > /dev/null
cd `dirname ${SCRIPT_DIR}` > /dev/null
SCRIPT_DIR=`pwd`;
popd  > /dev/null

LIBDIR=$SCRIPT_DIR/..

export AUDIT_PREFIX=$LIBDIR
exec $LIBDIR/ld-linux.so.2 --library-path $LIBDIR --audit libaudit.so $LIBDIR/%s $@
""" % os.path.basename(fname) )
    f.close()

    # Add executable permissions
    os.chmod( wrapper_name, stat.S_IRUSR | stat.S_IWUSR | stat.S_IXUSR )

DIRN = sys.argv[1]
fnames = sys.argv[2:]

os.makedirs( DIRN )
BINDIR = os.path.join( DIRN, "bin" )
os.mkdir( BINDIR )

# Dynamic linker:
shutil.copy( "/lib/ld-linux.so.2", DIRN )
# Auditor:
script_dir = os.path.dirname( os.path.abspath(__file__) )
shutil.copy( os.path.join( script_dir, "libaudit.so" ), DIRN )

libs = set()

# Copy the binaries across:
for fname in fnames:
    shutil.copy( fname, DIRN )

    for lib in get_libs(fname):
        libs.add(lib)

    basename = os.path.basename(fname)

    # Remove executable permissions from it
    # as it has to be run through the wrapper script
    os.chmod( os.path.join( DIRN, basename ),
              stat.S_IRUSR | stat.S_IWUSR )

    write_wrapper(fname, os.path.join(BINDIR, basename))

# Copy the libraries in:
for lib in libs:
    shutil.copy( lib, DIRN )
